#properties for running locally or for unit tests
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.security=INFO
logging.level.com.ge.predix.solsvc.kitservice=DEBUG
#<currentworkingdir>/config/application.properties are local ovverrides to src/main/resources(aka classpath)/application.properties
server.port=9092

spring.profiles.active=local,asset

#if you are behind a corporate proxy/firewall and want to access Predix Cloud
#predix.oauth.proxyHost =put.your.proxyHost.here 
#predix.oauth.proxyPort=put.your.proxyPort.here

#OAuth - please see predix-rest-client src/main/java/com/ge/predix/solsvc/restclient/config/OauthRestConfig.java for more info on oauth properties
predix.oauth.issuerId.url=put.your.uaa.issuerId.here
#you may put client:secret as unencoded cleartext by setting predix.oauth.clientIdEncode=true
predix.oauth.clientId=you.should.base64encode(put.your.clientId:put.your.clientSecret separated by a colon)  
#for debugging purposes, set to a high value
predix.rest.defaultSocketTimeout=500000

springfox.documentation.swagger.v2.path=/
java.docs.url=https://predixdev.github.io/kit-service
accessTokenEndpointUrl=${predix.oauth.issuerId.url}

#asset - get from VCAP env vars by binding an application to your asset instance e.g. cf bind-service <my-app> <my-asset>
#asset - see asset-bootstrap - src/main/java/com/ge/predix/solsvc/bootstrap/ams/common/AssetRestConfig.java for more info on asset properties 
predix.asset.restHost=put.your.Asset.service.instance.host.here
predix.asset.zoneid=put.your.Asset.service.instance.zoneId.here

#timeseries - get from VCAP env vars by binding an application to your timeseries instance e.g. cf bind-service <my-app> <my-timeseries>
#timeseries - see timeseries-bootstrap - src/main/java/com/ge/predix/solsvc/timeseries/bootstrap/config/TimeseriesRestConfig.java for more info on timeseries properties 
predix.timeseries.queryUrl=https://put.your.timeseries.service.instance.name.query.url.here/v1/datapoints
predix.timeseries.zoneid=put.your.TS.service.instance.zoneId.here
predix.timeseries.websocket.uri=wss://put.your.timeseries.ingest.uri.here/v1/stream/messages
#websocket for timeseries - get from VCAP env vars by binding an application to your timeseries instance e.g. cf bind-service <my-app> <my-timeseries>
#websocket for timeseries - see websocket-client - src/main/java/com/ge/predix/solsvc/websocket/config/IWebSocketConfig.java for more info on websocket properties 
predix.timeseries.websocket.pool.maxIdle=5
predix.timeseries.websocket.pool.maxActive=5
predix.timeseries.websocket.pool.maxWait=8000

#endpoints.beans.enabled=true
#endpoints.info.enabled=true

register.device.deactivation=60

kit.webapp.url=https://put.your.kit-cloud-webapp-link
kit.device.credentials=you.should.device.clientid.base64encode(put.your.clientId:put.your.clientSecret separated by a colon)
kit.device.artifactory.url=https://your.artifactory.username:your.artifactory.ApiKey@artifactory.predix.io/artifactory/PREDIX-EXT/predix-kit-rpm/

